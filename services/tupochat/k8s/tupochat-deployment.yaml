apiVersion: apps/v1
kind: Deployment
metadata:
  name: tupochat-server
  namespace: tupochat
  labels:
    app: tupochat
    component: server
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: tupochat
      component: server
  template:
    metadata:
      labels:
        app: tupochat
        component: server
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          until nc -z tupochat-postgres 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready"
      containers:
      - name: tupochat
        image: ghcr.io/timo0n22/tupochat:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5522
          name: http
        env:
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: tupochat-config
              key: SERVER_PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: tupochat-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: tupochat-config
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: tupochat-config
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tupochat-secret
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: tupochat-config
              key: DB_NAME
        - name: DATABASE_URL
          value: "postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5522
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5522
          initialDelaySeconds: 5
          periodSeconds: 5
